plugins {
    id("com.android.library")
    id("org.jetbrains.dokka")
    id("maven-publish")
    id("co.uzzu.dotenv.gradle")
    kotlin("android")
    kotlin("android.extensions")
}
android {
    defaultConfig {
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }
}

dependencies {
    implementation(kotlin("stdlib-jdk7", org.jetbrains.kotlin.config.KotlinCompilerVersion.VERSION))
    implementation(platform(Dependencies.Kotlin.coroutinesBom))
    implementation(Dependencies.Kotlin.coroutinesCore)
    implementation(Dependencies.SquareUp.retrofit)
    implementation(Dependencies.SquareUp.gsonConverter)
    implementation(Dependencies.SquareUp.okhttpInterceptor)
}

val dokka by tasks.getting(org.jetbrains.dokka.gradle.DokkaTask::class) {
    outputFormat = "html"
    outputDirectory = "$buildDir/dokka"
}

// Archives any dokka documentation generated by `dokka` task.
val dokkaJar by tasks.creating(Jar::class) {
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    description = "Assembles Kotlin docs with Dokka"
    archiveClassifier.set("javadoc")
    from(dokka)
    dependsOn(dokka)
}

val sourcesJar by tasks.creating(Jar::class) {
    from(android.sourceSets.getByName("main").java.srcDirs)
    archiveClassifier.set("sources")
}

afterEvaluate {
    publishing {

        val gprBaseUrl = "https://maven.pkg.github.com"
        val gprRepoOwner = "benjaminledet"
        val gprRepoId = "library"

        repositories {
            maven {
                name = "GithubPackages"
                url = uri("$gprBaseUrl/$gprRepoOwner/$gprRepoId")
                credentials {
                    username = env.fetch("GITHUB_USER")
                    password = env.fetch("GITHUB_TOKEN")
                }
            }
/* maven {
                name = "OSSRH"
                url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
}*/
        }

        publications {
            register<MavenPublication>(project.name) {
                from(components["release"])

                groupId = "benjamin.ledet"
                artifactId = project.name
                version = Versions.versionName

                artifact(tasks.getByName("sourcesJar"))
                artifact(tasks.getByName("dokkaJar"))

            }
        }
    }
}